"""
Костя решил доставлять обеды сотрудникам на удаленке. Всего есть n сотрудников, i-й из которых обедает в момент времени ai , и на доставку обеда ему нужно bi минут (затем Костя мгновенно возвращается в офис и готов доставлять следующий обед). Если обед доставлен сотруднику за T минут до планируемого обеда, Костя получает T монет в качестве чаевых. И, наоборот, если обед приезжает через T минут после планируемого времени обеда, Косте приходит штраф в размере T монет. Костя не может начать развозить заказы до момента времени 0.
От вас требуется составить такой план доставки обедов, чтобы Костя получил максимальное количество монет. Затем требуется q раз обновить план при меняющемся пожелании какого-либо из сотрудников (обновленных числах ai,bi).

Формат ввода

В первой строке через пробел заданы два числа n и q (1≤n,q≤20000) — количество сотрудников и количество изменений плана.

В следующих n строках вводится пара чисел ai,bi (0≤ai≤100000) — описание доставки для i-го сотрудника.
В следующих q строках вводятся описания запросов, состоящие из трех чисел i, A, B (1≤i≤n,0≤A≤100000,1≤B≤100000) — индекс сотрудника, данные для которого меняются, и новые значения ai,bi.

Формат вывода

Выведите q+1 строку — максимальное количество монет, которые Костя может заработать для каждого плана доставки. Обратите внимание, что возможна ситуация, когда Костя заработает отрицательное количество монет.


Пример :
INput:
2 1 
2 1
4 2
1 3 4

Output: 
2
-1



note:


В примере из условия в комании работает 2 сотрудника. Первый начинает обедать в момент времени a1=2, а второй -- в a2=4. 
Костя сначала за 1 единицу времени успеет отвезти обед первого сотрудника, а затем за еще 2 единицы 
времени доставит обед второму сотруднику. Обоим сотрудникам обед будет доставлен на минуту раньше ожидаемого времени, за что Костя получит 1+1=2 монеты чаевыми.

Когда первый сотрудник изменит параметры своего обеда на a1=3,b1=4, Костя физически не может успеть развезти первый обед вовремя. Оптимальным вариантом будет сначала отвезти обед второго сотрудника, получить за него чаевые, 
 и затем отвезти обед первого сотрудника, получив штраф. Общий заработок составит 2−3=−1 монету.
"""


n, q = map(int, input().split())
deliveries = []

for _ in range(n):
    a, b = map(int, input().split())
    deliveries.append((a, b))


deliveries.sort(key=lambda x: x[1])

current_time = 0
total_tips = 0

for a_i, b_i in deliveries:
    if current_time + b_i <= a_i:
        total_tips += a_i - (current_time + b_i)
    else:
        total_tips -= (current_time + b_i) - a_i
    current_time += b_i


print(total_tips)

for _ in range(q):
    i, A, B = map(int, input().split())
    deliveries[i - 1] = (A, B)
    

    deliveries.sort(key=lambda x: x[1])

    current_time = 0
    total_tips = 0
    

    for a_i, b_i in deliveries:
        if current_time + b_i <= a_i:
            total_tips += a_i - (current_time + b_i)
        else:
            total_tips -= (current_time + b_i) - a_i
        current_time += b_i


    print(total_tips)

